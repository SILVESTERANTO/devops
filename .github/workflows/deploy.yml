name: DevOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AZURE_RESOURCE_GROUP: govt-prep-rg
  ACR_NAME: govtprepregistry
  CLUSTER_NAME: govt-prep-aks
  REGISTRY_NAME: govtprepregistry
  IMAGE_NAME: govt-prep-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Azure Container Registry
      run: |
        az acr login --name ${{ env.REGISTRY_NAME }}
    
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker tag ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Configure kubectl
      run: |
        az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }}
    
    - name: Update deployment image
      run: |
        sed -i "s|acr_name.azurecr.io|${{ env.REGISTRY_NAME }}.azurecr.io|g" iac/k8s/deployment.yml
        sed -i "s|:latest|:${{ github.sha }}|g" iac/k8s/deployment.yml
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f iac/k8s/deployment.yml
        kubectl apply -f iac/k8s/service.yml
    
    - name: Wait for deployment rollout
      run: |
        kubectl rollout status deployment/govt-prep-deploy -n default
    
    - name: Verify deployment
      run: |
        kubectl get pods -l app=govt-prep
        kubectl get service govt-prep-service
        echo "Deployment successful!"
    
    - name: Get application URL
      run: |
        EXTERNAL_IP=$(kubectl get service govt-prep-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "Application URL: http://$EXTERNAL_IP"
    
    - name: Show deployment status
      run: |
        kubectl get deployment,govt-prep-deploy
        kubectl get pods -l app=govt-prep
